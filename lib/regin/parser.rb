#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Regin
  class Parser < Racc::Parser #:nodoc: all

def self.parse_regexp(regexp)
  options = Options.from_int(regexp.options)

  parser = new
  parser.options_stack << options.to_h

  expression = parser.scan_str(regexp.source)
  expression = expression.dup(options.to_h) if options.any?
  expression
end

attr_accessor :options_stack

def initialize
  @capture_index = 0
  @capture_index_stack = []
  @options_stack = []
end

##### State transition tables begin ###

racc_action_table = [
    53,    54,    56,    23,    45,    47,    49,     4,    26,    80,
     9,    10,    11,    13,    15,    57,    48,    50,    51,     4,
     6,     7,     9,    10,    11,    13,    15,    46,    48,    50,
    51,     4,     6,     7,     9,    10,    11,    13,    15,    84,
    48,    50,    51,     4,     6,     7,     9,    10,    11,    13,
    15,    75,    48,    50,    51,     4,     6,     7,     9,    10,
    11,    13,    15,    48,    50,    51,    29,     4,     6,     7,
     9,    10,    11,    13,    15,    82,    30,    32,    33,     4,
     6,     7,     9,    10,    11,    13,    15,    48,    50,    51,
    86,     4,     6,     7,     9,    10,    11,    13,    15,    48,
    50,    51,    34,     4,     6,     7,     9,    10,    11,    13,
    15,    48,    50,    51,    88,     4,     6,     7,     9,    10,
    11,    13,    15,    48,    50,    51,    89,    28,     6,     7,
    59,    61,    63,    64,    65,    66,    67,    68,    69,    70,
    71,    58,    60,    62,    18,    91,    92,    35,    37,    42,
    20,    21,    22,    23,    96,    24,    23,    39,    26,    23,
    73,    40,   nil,   nil,    40 ]

racc_action_check = [
    30,    31,    36,    24,    30,    30,    30,    47,    24,    52,
    47,    47,    47,    47,    47,    36,    85,    85,    85,     0,
    47,    47,     0,     0,     0,     0,     0,    30,    30,    30,
    30,    29,     0,     0,    29,    29,    29,    29,    29,    74,
    74,    74,    74,    80,    29,    29,    80,    80,    80,    80,
    80,    44,    44,    44,    44,    53,    80,    80,    53,    53,
    53,    53,    53,    84,    84,    84,    14,    15,    53,    53,
    15,    15,    15,    15,    15,    72,    15,    16,    20,    49,
    15,    15,    49,    49,    49,    49,    49,    87,    87,    87,
    76,     1,    49,    49,     1,     1,     1,     1,     1,    77,
    77,    77,    21,    32,     1,     1,    32,    32,    32,    32,
    32,    46,    46,    46,    78,    45,    32,    32,    45,    45,
    45,    45,    45,    75,    75,    75,    79,    12,    45,    45,
    37,    37,    37,    37,    37,    37,    37,    37,    37,    37,
    37,    37,    37,    37,     3,    81,    82,    22,    23,    28,
     3,     3,     3,     4,    90,     4,    25,    25,     4,    38,
    38,    25,   nil,   nil,    38 ]

racc_action_pointer = [
    16,    88,   nil,   132,   150,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   127,   nil,    64,    64,    75,   nil,   nil,   nil,
    66,    90,   139,   134,     0,   153,   nil,   nil,   149,    28,
    -9,   -10,   100,   nil,   nil,   nil,    -6,   108,   156,   nil,
   nil,   nil,   nil,   nil,    15,   112,    74,     4,   nil,    76,
   nil,   nil,    -5,    52,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    61,   nil,     3,    86,    79,    62,   103,   115,
    40,   134,   142,   nil,    26,   -21,   nil,    50,   nil,   nil,
   143,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -60,    -5,    -7,    -9,   -60,   -10,   -24,   -25,   -15,   -13,
   -14,   -16,   -60,   -17,    -1,   -60,    -2,    -6,   -28,    -8,
   -26,   -27,   -60,   -60,   -60,   -60,   -37,   -36,   -60,   -60,
   -60,   -60,   -60,   -29,   -30,   -33,   -60,   -60,   -60,   -11,
   -35,   -34,    97,    -3,   -60,   -60,   -60,   -60,   -57,   -60,
   -58,   -59,   -60,   -60,   -18,    -4,   -32,   -31,   -50,   -39,
   -51,   -40,   -52,   -41,   -42,   -43,   -44,   -45,   -46,   -47,
   -48,   -49,   -60,   -12,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -60,   -56,   -60,   -60,   -19,   -60,   -22,   -23,
   -60,   -20,   -38,   -55,   -54,   -53,   -21 ]

racc_goto_table = [
    12,    41,    25,    43,    36,    17,    55,    44,    19,    72,
    52,   nil,   nil,   nil,    41,    31,   nil,   nil,   nil,   nil,
   nil,    74,    38,    77,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    76,   nil,    78,   nil,    79,
   nil,    83,    85,    81,    87,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    95,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    90 ]

racc_goto_check = [
     1,    13,     9,     3,    12,     5,     3,    15,     7,    14,
    11,   nil,   nil,   nil,    13,     1,   nil,   nil,   nil,   nil,
   nil,    15,     9,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     1,   nil,     1,   nil,     1,
   nil,    15,    15,     1,    15,   nil,   nil,   nil,   nil,   nil,
   nil,    15,    15,   nil,    15,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     1 ]

racc_goto_pointer = [
   nil,     0,   nil,   -26,   nil,     4,   nil,     5,   nil,    -2,
   nil,   -20,   -18,   -24,   -28,   -23 ]

racc_goto_default = [
   nil,   nil,    14,    16,     1,     2,     3,   nil,     5,   nil,
     8,   nil,   nil,    27,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 41, :_reduce_1,
  1, 41, :_reduce_none,
  3, 42, :_reduce_3,
  3, 42, :_reduce_4,
  1, 43, :_reduce_5,
  2, 44, :_reduce_6,
  1, 44, :_reduce_7,
  2, 45, :_reduce_8,
  1, 45, :_reduce_none,
  1, 46, :_reduce_none,
  3, 46, :_reduce_11,
  4, 46, :_reduce_12,
  1, 46, :_reduce_13,
  1, 46, :_reduce_14,
  1, 46, :_reduce_15,
  1, 46, :_reduce_16,
  1, 46, :_reduce_17,
  3, 48, :_reduce_18,
  5, 48, :_reduce_19,
  5, 48, :_reduce_20,
  6, 48, :_reduce_21,
  5, 48, :_reduce_22,
  5, 48, :_reduce_23,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  2, 47, :_reduce_29,
  2, 47, :_reduce_30,
  3, 47, :_reduce_31,
  2, 52, :_reduce_32,
  1, 52, :_reduce_none,
  2, 49, :_reduce_34,
  2, 49, :_reduce_35,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  5, 53, :_reduce_38,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  4, 51, :_reduce_53,
  4, 51, :_reduce_54,
  4, 51, :_reduce_55,
  3, 51, :_reduce_56,
  1, 55, :_reduce_57,
  1, 55, :_reduce_58,
  1, 55, :_reduce_59 ]

racc_reduce_n = 60

racc_shift_n = 97

racc_token_table = {
  false => 0,
  :error => 1,
  :BAR => 2,
  :LBRACK => 3,
  :RBRACK => 4,
  :NEGATE => 5,
  :CCLASS => 6,
  :DOT => 7,
  :CHAR => 8,
  :BANG => 9,
  :LPAREN => 10,
  :RPAREN => 11,
  :QMARK => 12,
  :EQUAL => 13,
  :COLON => 14,
  :NAME => 15,
  :L_ANCHOR => 16,
  :R_ANCHOR => 17,
  :STAR => 18,
  :PLUS => 19,
  :LCURLY => 20,
  :RCURLY => 21,
  "alnum" => 22,
  "alpha" => 23,
  "ascii" => 24,
  "blank" => 25,
  "cntrl" => 26,
  "digit" => 27,
  "graph" => 28,
  "lower" => 29,
  "print" => 30,
  "punct" => 31,
  "space" => 32,
  "upper" => 33,
  "word" => 34,
  "xdigit" => 35,
  :MINUS => 36,
  :MULTILINE => 37,
  :IGNORECASE => 38,
  :EXTENDED => 39 }

racc_nt_base = 40

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "BAR",
  "LBRACK",
  "RBRACK",
  "NEGATE",
  "CCLASS",
  "DOT",
  "CHAR",
  "BANG",
  "LPAREN",
  "RPAREN",
  "QMARK",
  "EQUAL",
  "COLON",
  "NAME",
  "L_ANCHOR",
  "R_ANCHOR",
  "STAR",
  "PLUS",
  "LCURLY",
  "RCURLY",
  "\"alnum\"",
  "\"alpha\"",
  "\"ascii\"",
  "\"blank\"",
  "\"cntrl\"",
  "\"digit\"",
  "\"graph\"",
  "\"lower\"",
  "\"print\"",
  "\"punct\"",
  "\"space\"",
  "\"upper\"",
  "\"word\"",
  "\"xdigit\"",
  "MINUS",
  "MULTILINE",
  "IGNORECASE",
  "EXTENDED",
  "$start",
  "expression",
  "alternation",
  "subexpression",
  "expression_ary",
  "quantified_atom",
  "atom",
  "quantifier",
  "group",
  "bracket_expression",
  "anchor",
  "options",
  "quantifier_char",
  "posix_bracket_expression",
  "posix_bracket_type",
  "modifier" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Expression.new(val[0]) 
    result
end

# reduce 2 omitted

def _reduce_3(val, _values, result)
 result = val[0] + [val[2]] 
    result
end

def _reduce_4(val, _values, result)
 result = Alternation.new(val[0], val[2])  
    result
end

def _reduce_5(val, _values, result)
 result = Expression.new(val[0]) 
    result
end

def _reduce_6(val, _values, result)
 result = val[0] + [val[1]] 
    result
end

def _reduce_7(val, _values, result)
 result = [val[0]] 
    result
end

def _reduce_8(val, _values, result)
 result = val[0].dup(:quantifier => val[1]) 
    result
end

# reduce 9 omitted

# reduce 10 omitted

def _reduce_11(val, _values, result)
 result = CharacterClass.new(val[1]) 
    result
end

def _reduce_12(val, _values, result)
 result = CharacterClass.new(val[2], :negate => true) 
    result
end

def _reduce_13(val, _values, result)
 result = CharacterClass.new(val[0]) 
    result
end

def _reduce_14(val, _values, result)
 result = CharacterClass.new('.') 
    result
end

def _reduce_15(val, _values, result)
 result = Anchor.new(val[0]) 
    result
end

def _reduce_16(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_17(val, _values, result)
 result = Character.new(val[0]) 
    result
end

def _reduce_18(val, _values, result)
	  result = Group.new(val[1], :index => @capture_index_stack.pop)
	
    result
end

def _reduce_19(val, _values, result)
	 result = Group.new(val[3], :index => @capture_index_stack.pop, :lookahead => :postive)
       
    result
end

def _reduce_20(val, _values, result)
	 result = Group.new(val[3], :index => @capture_index_stack.pop, :lookahead => :negative)
       
    result
end

def _reduce_21(val, _values, result)
	  result = Group.new(val[4], val[2].merge(:capture => false))
	  @options_stack.pop
	
    result
end

def _reduce_22(val, _values, result)
	  result = Group.new(val[3], :capture => false);
	
    result
end

def _reduce_23(val, _values, result)
	  result = Group.new(val[3], :name => val[2], :index => @capture_index_stack.pop);
	
    result
end

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

def _reduce_29(val, _values, result)
 result = val.join 
    result
end

def _reduce_30(val, _values, result)
 result = val.join 
    result
end

def _reduce_31(val, _values, result)
 result = val.join 
    result
end

def _reduce_32(val, _values, result)
 result = val.join 
    result
end

# reduce 33 omitted

def _reduce_34(val, _values, result)
 result = val.join 
    result
end

def _reduce_35(val, _values, result)
 result = val.join 
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
 result = val.join 
    result
end

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
	    @options_stack << result = { val[1] => false, val[2] => false, val[3] => false }
	  
    result
end

def _reduce_54(val, _values, result)
	    @options_stack << result = { val[0] => true, val[2] => false, val[3] => false }
	  
    result
end

def _reduce_55(val, _values, result)
	    @options_stack << result = { val[0] => true, val[1] => true, val[3] => false }
	  
    result
end

def _reduce_56(val, _values, result)
	    @options_stack << result = { val[0] => true, val[1] => true, val[2] => true }
	  
    result
end

def _reduce_57(val, _values, result)
 result = :multiline 
    result
end

def _reduce_58(val, _values, result)
 result = :ignorecase 
    result
end

def _reduce_59(val, _values, result)
 result = :extended 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module Regin

require 'regin/tokenizer'
